doctype html

html
	head
		title Welcome #{username}
		meta(charset='utf-8')
		meta(name='description' content='exercise tracker profile')
		meta(http-equiv='X-UA-Compatible', content='IE-edge')
		meta(name='viewport', content='width=device-width, initial-scale=1')
		meta(http-equiv='Content-Language' content='en')
		script(src="https://momentjs.com/downloads/moment.min.js")
		script(src="https://cdn.jsdelivr.net/npm/chart.js@2.7.2/dist/Chart.bundle.min.js")
		script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js')
		script(src='https://code.jquery.com/ui/1.12.1/jquery-ui.js')
		
	body
	
		include ../includes/navbar.pug
		
		header
			h1 Hi, #{username}!		
		
		
		h2 New Entry
		
		form(id="exercise_form" action='/api/updatedata' method='put')
			label Choose the category of your exercise
			select(id="category" name="category" required)
				option(selected) aerobic
				option strength
				option flexibility
				option balance
			label Description of your exercise
			input(type='text' id="description" name='description' required)
			label Provide the duration of your exercise
			input(type='time' id='duration1' name='duration1' min="00:00" max="24:00" required)
			p to
			input(type='time' id='duration2' name='duration2' min="00:00" max="24:00" required)
			label Choose the date of your exercise
			input(type='text' id='datepicker' name="date" required)
			input(type='submit' name='submit' value='add new entry')

		h2 Progress Chart
		
		div(id="chartContainer")
			canvas(id="progressChart" width="400" height="400")
			ul#buttonHolder
				button(id="aerobicChart") Aerobic
				button(id="strengthChart") Strength
				button(id="flexibilityChart") Flexibility
				button(id="balanceChart") Balance
		
		div#journal
			for n, i in exercise_data
				div.dataContainer
					p.date=moment(n.date).format('MM/DD/YYYY')
					p.description=n.description
					p.duration=moment.duration(n.duration, 'seconds').humanize()
					p.category=n.category
		
		- var x = 0;
		
		ul#pagination
			while x < max
				-x++
				if x == 1
					a(id=x+"get" class="activePage")=x
				else
					a(id=x+"get")=x
	script.
		$(document).ready(function() {
		
			//function to get a new page of journal entries
			function onClickPage (){
				$.ajax({
					method: "GET",
					url: "/api/getdata",
					data: {page: parseInt(this.text)},
					success: function(data){
						if(data.update){
							var html = [];
							data.update.forEach((ele) => {
								html.push("<div class='dataContainer'>");
								html.push("<p class='date'>"+moment(ele.date).format('MM/DD/YYYY')+"</p>");
								html.push("<p class='description'>"+ele.description+"</p>");
								html.push("<p class='duration'>"+moment.duration(ele.duration, 'seconds').humanize()+"</p>");
								html.push("<p class='category'>"+ele.category+"</p>");
								html.push("</div>");
							});
							$("#journal").html(html.join(''));
							
							var maxPage = document.getElementById("pagination").innerHTML.match(/[\d]get/g);
							maxPage = maxPage.length;
							
							for(let i = 1; i < maxPage; i++){
								$("#"+i+"get").removeClass("activePage");
							}
							
							$(this.id).addClass("activePage");
							
						}
						//add response when outside of range
					},
					error: function(data){
						//add response to error
					}
				});	
			}
			
			
			for(let i = 1; i <= #{max}; i++){
				document.getElementById(i+"get").onclick = onClickPage;
			}
			
			var chart;		
			//creating the chart
			$.ajax({
				type: 'GET',
				url: '/api/getchart',
				data: {category:"aerobic"},
				success: function(chartData){
					if(chartData.update){
						var ctx = document.getElementById('progressChart').getContext('2d');
						chartData.update.options.scales = {
							yAxes: [{
								ticks: {
									callback: function(value, index, values){
										return value + ' min.';
									}
								}
							}]
						}
						chart = new Chart(ctx, chartData.update);
					}
					//add something when data is null
				},
				failure: function(data){
					console.log(data);
					//delete canvas and replace it with a text saying "no entries"
				}
			});
		
			
			//getting a new page
			for(let i = 0; i < #{max}; i++){
				$((i + 1)+"get").click(function(e){
					$.ajax({
						type: 'GET',
						url: '/api/getdata',
						data: i + 1,
						success: function(data){
							var html = [];
							data.forEach((ele) => {
								html.push('<div class="dataContainer">');
								html.push('<p>'+ele.data+'</p><p>'+ele.description+'</p>');
								html.push('<p>'+ele.duration+'</p><p>'+ele.category+'</p></div>');
							});
							$('#journal').html(html.join(''));
						},
						error: function(data){
							alert(data)
						}
					});
				})
			}
			
			//adding buttons to change chart
			var buttons = [
				"#aerobicChart",
				"#strengthChart",
				"#flexibilityChart",
				"#balanceChart"			
			];
			for(let i = 0; i < buttons.length; i++){
				(function (button){

					$(button).click(function(e){
						$.ajax({
							type: 'GET',
							url: '/api/getchart',
							data: {category: $(button).text().toLowerCase()},
							success: function(data){
								if(data.update){
									chart.data = data.update.data;
									chart.options = data.update.option;
									chart.update();
								}
								
								//add something when data is null
							},
							error: function(data){
								alert(data.msg);
							}
						});
						e.preventDefault;
					});
				})(buttons[i]);
				
			}
			
			//date picker form entry
			$("#datepicker").datepicker();
			
			//add response to updating 			
			$("#exercise_form").submit(function(e){
				var time2 = document.getElementById('duration2').valueAsNumber;
				var time1 = document.getElementById('duration1').valueAsNumber;
				var timeDuration = (time2 - time1)/1000;
				if(timeDuration < 0){alert('The second time submission should be after the first!'); return;}

				var data = {
					category: $('#category').val(),
					date: $('#datepicker').val(),
					description: $('#description').val(),
					duration: timeDuration
				};
				
				$.ajax({
					type: "PUT",
					url: '/api/updatedata',
					data: data,
					success: function(data){

						//re-get the updated the chart
						$.ajax({
							type: 'GET',
							url: '/api/getchart',
							data: {category:"aerobic"},
							success: function(chartData){
								if(chartData.update){
									var ctx = document.getElementById('progressChart').getContext('2d');
									chart.data = chartData.update.data;
									chart.update();
								}
								//add something when data is null								
							},
							failure: function(data){
								//delete canvas and replace it with a text saying "no entries"
							}
						});
						
						//get data within the journal
						var journalData = document.getElementsByClassName("dataContainer");
						var updatedJournal = [...journalData].map((ele) => {
							//go through each node and create a return obj with the data
							var extracted = ele.outerHTML.match(/<p[\w\s+="-']*>[\s\w\/]*<\/p>/g);
							var toReturn = {
								date: extracted[0].replace(/<\/*p[\w\s+="-']*>/g,''),
								description: extracted[1].replace(/<\/*p[\w\s+="-']*>/g,''),
								duration: extracted[2].replace(/<\/*p[\w\s+="-']*>/g,''),
								category: extracted[3].replace(/<\/*p[\w\s+="-']*>/g,'')
							};

							return toReturn;
						})
						
						updatedJournal.push(data.update);
						
						updatedJournal.sort((a, b) => {
							return  new Date(b.date) - new Date(a.date);
						}).slice(0, 10);

						var html = [];
						updatedJournal.forEach((ele) => {
							html.push("<div class='dataContainer'>");
							html.push("<p class='date'>"+ele.date+"</p>");
							html.push("<p class='description'>"+ele.description+"</p>");
							html.push("<p class='duration'>"+ele.duration+"</p>");
							html.push("<p class='category'>"+ele.category+"</p>");
							html.push("</div>");
						});
						//once you have it then place it into the journal
						
						$("#journal").html(html.join(''));
						//update the max and if needed update the pagination
						var phtml = [];
						for(let i = 1; i <= data.max; i++){
							phtml.push('<a id="'+i+'get")>'+i+'</a>');
						}
						
						$("#pagination").html(phtml.join(''));
						alert('Your entry was successfully submitted')
					},
					error: function(data){alert(data)}
				});
				e.preventDefault();
			});
		});