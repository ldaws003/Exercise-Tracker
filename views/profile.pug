doctype html

html
	head
		title Welcome #{username}
		meta(charset='utf-8')
		meta(name='description' content='exercise tracker profile')
		meta(http-equiv='X-UA-Compatible', content='IE-edge')
		meta(name='viewport', content='width=device-width, initial-scale=1')
		meta(http-equiv='Content-Language' content='en')
		script(src="https://momentjs.com/downloads/moment.min.js")
		script(src="https://cdn.jsdelivr.net/npm/chart.js@2.7.2/dist/Chart.bundle.min.js")
		link(rel="stylesheet" href="/public/constrict_view.css")
		link(rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous")
		script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous")
		script(src="http://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous")
		script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous")
		script(src='https://code.jquery.com/ui/1.12.1/jquery-ui.js')
		
	body
	
		include ../includes/navbar.pug
		
		div(class="container centered constrict")
			
			div(class="container constrict")
			
				header
					h1(class="mx-auto" style="width:250px") Hi, #{username}!

					
				div(class="row my-3")
					div(class="col-md-6")
						h2 New Entry
			
						form(id="exercise_form" action='/api/updatedata' method='put')
							div(class="form-group")
								label Choose the category of your exercise
								select(id="category" class="form-control" name="category" required)
									option(selected) aerobic
									option strength
									option flexibility
									option balance
							div(class="form-group")
								label Description of your exercise
								textarea( class="form-control" id="description" name='description' required)
							div(class="form-group mx-1")
								label Provide the duration of your exercise
								input(type='time' class="mx-1" id='duration1' name='duration1' min="00:00" max="24:00" required)
								p(style={display: "inline"}) to
								input(class="mx-1" type='time' id='duration2' name='duration2' min="00:00" max="24:00" required)
							div(class="from-group")
								div(class="input-group date")
									label Choose the date of your exercise
									input(type='text' class="form-control mx-1 date" id='datepicker' name="date" required)
									span(class="input-group-addon")
										span(class="glyphicon glyphicon-calendar")
							input(type='submit' class="btn my-2 btn-block btn-primary" name='submit' value='add new entry')
							
					div(class="col-md-6")
						h2 Progress Chart
						
						div(id="chartContainer")
							canvas(id="progressChart" width="400" height="400")
						div(id="buttonHolder" class="btn-group")
							button(id="aerobicChart" class="btn btn-light") Aerobic
							button(id="strengthChart" class="btn btn-danger") Strength
							button(id="flexibilityChart" class="btn btn-primary") Flexibility
							button(id="balanceChart" class="btn btn-info") Balance
						
				
			
				div(id="journal" class="row container-fluid")
					for n, i in exercise_data
						div(class="card m-1")
							div(class="card-header")
								p(class="date")=moment(n.date).format('MM/DD/YYYY')
								p(class="category")="Category: "+n.category
							div(class="card-body")
								p(class="description smaller-text")=n.description
							div(class="card-footer")
								p(class="duration")="Duration: "+moment.duration(n.duration, 'seconds').humanize()
							
			
				- var x = 0;
			
				ul(id="pagination" class="pagination my-2 justify-content-center")
					while x < max
						-x++
						if x == 1
							li(id=x+"" class="page-item active")
								a(id=x+"get" class="page-link")=x
						else
							li(id=x+"" class="page-item")
								a(id=x+"get" class="page-link")=x
	script.
		$(document).ready(function() {
		
			//adding active profile link in the navbar
			$("#profile").addClass("active");
		
			//function to get a new page of journal entries
			function onClickPage (){
				let id = this.id;
				let pagenum = parseInt(this.text);
				$.ajax({
					method: "GET",
					url: "/api/getdata",
					data: {page: pagenum},
					success: function(data){
						if(data.update){
							var html = [];
							data.update.forEach((ele) => {
								html.push("<div class='card m-1'>");
								html.push("<div class='card-header'>");
								html.push("<p class='date'>"+moment(ele.date).format('MM/DD/YYYY')+"</p>");
								html.push("<p class='category'> Category: "+ele.category+"</p>");
								html.push("</div>");
								html.push("<div class='card-body'>");
								html.push("<p class='description smaller-text'>"+ele.description+"</p>");
								html.push("</div>");
								html.push("<div class='card-footer'>");
								html.push("<p class='duration'> Duration: "+moment.duration(ele.duration, 'seconds').humanize()+"</p>");
								html.push("</div>");
								html.push("</div>");
							});
							$("#journal").html(html.join(''));
							
							var maxPage = document.getElementById("pagination").outerHTML.match(/li\s/g);
							maxPage = maxPage.length;
							
							for(let i = 1; i <= maxPage; i++){
								$("#"+i).removeClass("active");
							}
							
							$("#"+id.replace('get', '')).addClass("active");
							
						}
						//add response when outside of range
					},
					error: function(data){
						//add response to error
					}
				});	
			}
			
			
			for(let i = 1; i <= #{max}; i++){
				document.getElementById(i+"get").onclick = onClickPage;
			}
			
			var chart;		
			//creating the chart
			$.ajax({
				type: 'GET',
				url: '/api/getchart',
				data: {category:"aerobic"},
				success: function(chartData){
					if(chartData.update){
						var ctx = document.getElementById('progressChart').getContext('2d');
						chartData.update.options.scales = {
							yAxes: [{
								ticks: {
									callback: function(value, index, values){
										return value + ' min.';
									},
									min: 0
								}
							}]
						}
						chart = new Chart(ctx, chartData.update);
					} else {
						//when there is nothing to load
						alert("Sorry, but there is no entry of this type.");					
					}
				},
				failure: function(data){
					console.log(data);
					//delete canvas and replace it with a text saying "no entries"
				}
			});
			
			//adding buttons to change chart
			var buttons = [
				"#aerobicChart",
				"#strengthChart",
				"#flexibilityChart",
				"#balanceChart"			
			];
			for(let i = 0; i < buttons.length; i++){
				(function (button){

					$(button).click(function(e){
						$.ajax({
							type: 'GET',
							url: '/api/getchart',
							data: {category: $(button).text().toLowerCase()},
							success: function(data){
								if(data.update){
									console.log(data);
									chart.data = data.update.data;
									chart.update();
								} else {
									//when there is nothing to load
									alert("Sorry, but there is no entry of this type.");
								}
							},
							error: function(data){
								alert(data.msg);
							}
						});
						e.preventDefault;
					});
				})(buttons[i]);
				
			}
			
			//date picker form entry
			$("#datepicker").datepicker();
			
			//add response to updating 
			//updating the journal cards			
			$("#exercise_form").submit(function(e){
				var time2 = document.getElementById('duration2').valueAsNumber;
				var time1 = document.getElementById('duration1').valueAsNumber;
				var timeDuration = (time2 - time1)/1000;
				if(timeDuration < 0){alert('The second time submission should be after the first!'); return;}

				var data = {
					category: $('#category').val(),
					date: $('#datepicker').val(),
					description: $('#description').val(),
					duration: timeDuration
				};
				
				$.ajax({
					type: "PUT",
					url: '/api/updatedata',
					data: data,
					success: function(data){

						//re-get the updated the chart
						$.ajax({
							type: 'GET',
							url: '/api/getchart',
							data: {category:"aerobic"},
							success: function(chartData){
								if(chartData.update){
									var ctx = document.getElementById('progressChart').getContext('2d');
									chart.data = chartData.update.data;
									chart.update();
								} else {
									//when there is nothing to load
									alert("Sorry, but there is no entry of this type.");				
								}								
							},
							failure: function(data){
								//delete canvas and replace it with a text saying "no entries"
							}
						});
						
						//get data within the journal
						var journalData = document.getElementsByClassName("dataContainer");
						var updatedJournal = [...journalData].map((ele) => {
							//go through each node and create a return obj with the data
							var extracted = ele.outerHTML.match(/<p[\w\s+="-']*>[\s\w\/]*<\/p>/g);
							var toReturn = {
								date: extracted[0].replace(/<\/*p[\w\s+="-']*>/g,''),
								description: extracted[1].replace(/<\/*p[\w\s+="-']*>/g,''),
								duration: extracted[2].replace(/<\/*p[\w\s+="-']*>/g,''),
								category: extracted[3].replace(/<\/*p[\w\s+="-']*>/g,'')
							};

							return toReturn;
						})
						
						updatedJournal.push(data.update);
						
						updatedJournal.sort((a, b) => {
							return  new Date(b.date) - new Date(a.date);
						}).slice(0, 10);

						var html = [];
						updatedJournal.forEach((ele) => {
							html.push("<div class='card m-1'>");
							html.push("<div class='card-header'>");
							html.push("<p class='date'>"+ele.date+"</p>");
							html.push("<p class='category'> Category: "+ele.category+"</p>");
							html.push("</div>");
							html.push("<div class='card-body'>");
							html.push("<p class='description smaller-text'>"+ele.description+"</p>");
							html.push("</div>");
							html.push("<div class='card-footer'>");
							html.push("<p class='duration'> Duration: "+moment.duration(n.duration, 'seconds').humanize()+"</p>");
							html.push("</div>");
							html.push("</div>");
						});
						//once you have it then place it into the journal
						
						$("#journal").html(html.join(''));
						//update the max and if needed update the pagination
						var phtml = [];
						for(let i = 1; i <= data.max; i++){
							if(i == 1){
								phtml.push("<li class='page-item active'>");
							} else {
								phtml.push("<li class='page-item'>");
							}							
							phtml.push('<a id="'+i+'get" class="page-link">'+i+'</a>');
							phtml.push("</li>");
						}
						
						$("#pagination").html(phtml.join(''));
						alert('Your entry was successfully submitted')
					},
					error: function(data){alert(data)}
				});
				e.preventDefault();
			});
		});